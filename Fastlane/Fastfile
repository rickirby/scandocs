# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  
  desc "Setup CI Keychain to prevent stack due to default keychain locked"
  lane :setupCIKeychain do
    create_keychain(
      name: ENV["MATCH_KEYCHAIN"],
      password: ENV["MATCH_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      add_to_search_list: true,
      verbose: true
    )
  end

  desc "Preparing Certificate and Provisioning Profiles on New Device Setup"
  lane :prepare do
    match(
      app_identifier: "com.scandocs.ios",
      type: "development",
      readonly: true
    )

    match(
      app_identifier: "com.scandocs.ios",
      type: "adhoc",
      readonly: true
    )

    match(
      app_identifier: "com.scandocs.ios",
      type: "appstore",
      readonly: true
    )
  end

  desc "Build TestFlight"
  lane :build_testflight do
    build_number = ENV["BUILD_NUMBER"]

    UI.message("Change build number to #{build_number}")
    sh("cd .. && ./Tooling/change_build_number.sh #{build_number}")

    UI.message("Setup Project")
    sh("cd .. && ./setup.sh")

    UI.message("Setup Custom Keychain")
    setupCIKeychain

    UI.message("Prepare Provisioning Profiles")
    match(
      keychain_name: ENV["MATCH_KEYCHAIN"] ||  "login.keychain",
      keychain_password: ENV["MATCH_PASSWORD"] || "",
      app_identifier: "com.scandocs.ios",
      type: "appstore",
      readonly: true
    )

    UI.message("Build IPA")
    build_app(
      workspace: "Scandocs.xcworkspace",
      scheme: "Scandocs",
      configuration: "Release",
      export_method: "app-store"
    )

    app_store_connect_api_key

    UI.message("Upload to TestFlight")
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      skip_submission: true
    )

    notifySuccessBuild(
      destination: "TestFlight"
    )
  end

  desc "Build Firebase"
  lane :build_firebase do
    build_number = ENV["BUILD_NUMBER"]

    UI.message("Change build number to #{build_number}")
    sh("cd .. && ./Tooling/change_build_number.sh #{build_number}")

    UI.message("Setup Project")
    sh("cd .. && ./setup.sh")

    UI.message("Setup Custom Keychain")
    setupCIKeychain

    UI.message("Prepare Provisioning Profiles")
    match(
      keychain_name: ENV["MATCH_KEYCHAIN"] ||  "login.keychain",
      keychain_password: ENV["MATCH_PASSWORD"] || "",
      app_identifier: "com.scandocs.ios",
      type: "adhoc",
      readonly: true
    )

    UI.message("Build IPA")
    build_app(
      workspace: "Scandocs.xcworkspace",
      scheme: "Scandocs",
      configuration: "AdHoc",
      export_method: "ad-hoc",
      export_options: {
        iCloudContainerEnvironment: "Development"
      } 
    )

    UI.message("Upload to Firebase")
    firebase_app_distribution(
      app: ENV["FIREBASE_APP_ID"],
      release_notes: ENV["BRANCH_NAME"],
      groups: "self-tester",
      firebase_cli_token: ENV["FIREBASE_TOKEN"]
    )

    notifySuccessBuild(
      destination: "Firebase"
    )
  end

  desc "Send success message to Discord"
  lane :notifySuccessBuild do |options|
    destination = options[:destination]

    discord_notifier(
      webhook_url: ENV["DISCORD_WEBHOOK_URL"],
      success: true,
      title: "#{destination}",
      description: "Apps has been successfully uploaded to #{destination} ðŸŽ‰",
      fields:[
        {
          name: "Build Number", 
          value: ENV["BUILD_NUMBER"] || "-"
        },
        {
          name: "Git Branch", 
          value: ENV["BRANCH_NAME"] || "-"
        },
        {
          name: "Git Commit",
          value: ENV["COMMIT_SHA"] || "-"
        }
      ]  
    )
  end

  desc "Send error message to Discord"
  error do |lane, exception|
    discord_notifier(
      webhook_url: ENV["DISCORD_WEBHOOK_URL"],
      success: false,
      title: "Error ðŸ’¥",
      description: "Encountered error from Workflow `#{ENV["GITHUB_WORKFLOW"]}` on lane `#{lane}`.",
      fields:[
        {
          name: "Build Number", 
          value: ENV["BUILD_NUMBER"] || "local build"
        },
        {
          name: "Git Branch", 
          value: ENV["BRANCH_NAME"] || "-"
        },
        {
          name: "Git Commit",
          value: ENV["COMMIT_SHA"] || "-"
        },
        {
          name: "Error Message",
          value: exception
        }
      ]
    )
  end
end
